// ignore_for_file: constant_identifier_names

import 'package:yota/utils/service_asset.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter_svg/svg.dart';

enum TimerIcon {
  etc,
  empty,

  amphora,
  avocado,
  baby_bottle,
  bacon,
  bagel,
  baguette_bread,
  banana,
  beans,
  beer_mug,
  bento_box,
  beverage_box,
  birthday_cake,
  blueberries,
  bottle_with_popping_cork,
  bowl_with_spoon,
  brcholine,
  bread,
  bubble_tea,
  burrito,
  butter,
  candy,
  canned_food,
  carrot,
  cheese_wedge,
  cherries,
  chestnut,
  chickenbreast,
  chocolate_bar,
  chopsticks,
  clinking_beer_mugs,
  clinking_glasses,
  cocktail_glass,
  coconut,
  cooked_rice,
  cookie,
  cooking,
  corn,
  crab,
  croissant,
  cucumber,
  cup_with_straw,
  cupcake,
  curry_rice,
  custard,
  cut_of_meat,
  dango,
  doughnut,
  dumpling,
  egg_shell,
  egg_soft,
  egg_welldone,
  eggplant,
  falafel,
  fettuccine,
  fish_cake_with_swirl,
  flatbread,
  fondue,
  fork_and_knife_with_plate,
  fork_and_knife,
  fortune_cookie,
  french_fries,
  fried_shrimp,
  glass_of_milk,
  grapes,
  green_apple,
  green_salad,
  hamburger,
  honey_pot,
  hot_beverage,
  hot_dog,
  ice_cream,
  ice,
  jar,
  kitchen_knife,
  kiwi_fruit,
  lemon,
  lettuce,
  lobster,
  lollipop,
  mango,
  mate,
  meat_on_bone,
  melon,
  moon_cake,
  mushroom,
  oden,
  olive,
  garlic,
  onion,
  oyster,
  pancakes,
  paprika,
  peach,
  peanut,
  pear,
  penne,
  pie,
  pineapple,
  pizza,
  popcorn,
  pot_of_food,
  potato,
  poultry_leg,
  pouring_liquid,
  pretzel,
  red_apple,
  red_pepper,
  rice_ball,
  rice_cracker,
  sake,
  salt,
  sandwich,
  shallow_pan_of_food,
  shaved_ice,
  shortcake,
  shrimp,
  soft_ice_cream,
  spaghetti,
  spoon,
  squid,
  steaming_bowl,
  strawberry,
  stuffed_flatbread,
  sushi,
  sweetpotato,
  taco,
  takeout_box,
  tamale,
  tangerine,
  teacup_without_handle,
  teapot,
  tofu,
  tomato,
  tropical_drink,
  tumbler_glass,
  waffle,
  watermelon,
  wine_glass,
}

extension Utils on TimerIcon {
  SvgPicture asset({
    double? width,
    double? height,
    BoxFit? fit = BoxFit.scaleDown,
  }) =>
      SvgAsset("timer_icon/$name").asset(
        width: width,
        height: height,
        fit: fit,
      );
}

extension TimerIconTransfer on String {
  TimerIcon get toTimerIcon => TimerIcon.values
      .firstWhere((e) => e.name == this, orElse: () => TimerIcon.etc);
}
